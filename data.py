import numpy as np

font = {
    "0x0": [0xf0, 0x90, 0x90, 0x90, 0xf0],
    "0x1": [0x20, 0x60, 0x20, 0x20, 0x70],
    "0x2": [0xf0, 0x10, 0xf0, 0x80, 0xf0],
    "0x3": [0xf0, 0x10, 0xf0, 0x10, 0xf0],
    "0x4": [0x90, 0x90, 0xf0, 0x10, 0x10],
    "0x5": [0xf0, 0x80, 0xf0, 0x10, 0xf0],
    "0x6": [0xf0, 0x80, 0xf0, 0x90, 0xf0],
    "0x7": [0xf0, 0x10, 0x20, 0x40, 0x40],
    "0x8": [0xf0, 0x90, 0xf0, 0x90, 0xf0],
    "0x9": [0xf0, 0x90, 0xf0, 0x10, 0xf0],
    "0xa": [0xf0, 0x90, 0xf0, 0x90, 0x90],
    "0xb": [0xe0, 0x90, 0xe0, 0x90, 0xe0],
    "0xc": [0xf0, 0x80, 0x80, 0x80, 0xf0],
    "0xd": [0xe0, 0x90, 0x90, 0x90, 0xe0],
    "0xe": [0xf0, 0x80, 0xf0, 0x80, 0xf0],
    "0xf": [0xf0, 0x80, 0xf0, 0x80, 0x80]
}

# 8x5 Sprites
sprites = [
    0x18, 0x18, 0x7e, 0x7e, 0x7e,
    0x66, 0x66, 0x7e, 0x7e, 0x7e
]

font_list = [
    font["0x0"],
    font["0x1"],
    font["0x2"],
    font["0x3"],
    font["0x4"],
    font["0x5"],
    font["0x6"],
    font["0x7"],
    font["0x8"],
    font["0x9"],
    font["0xa"],
    font["0xb"],
    font["0xc"],
    font["0xd"],
    font["0xe"],
    font["0xf"]
]

def load_font(memory):
    flattened_font = [byte for char in font_list for byte in char]
    for i in range(len(flattened_font)):
        if 0x50 + i < len(memory.memory):
            memory.write(0x50 + i, flattened_font[i])
        else:
            print(f"Warning: Attempt to write out of memory bounds at address {0x50 + i}")

def load_sprites(memory):
    for idx in range(len(sprites)):
        if idx < len(memory):
            memory.write(0x0 + idx, sprites[idx])
        else:
            print(f"Warning: Attempt to write out of memory bounds at address {0x0 + idx}")
